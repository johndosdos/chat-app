// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: users.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (user_id, username, email)
VALUES ($1, $2, $3)
ON CONFLICT (user_id) DO NOTHING
RETURNING user_id, username, email
`

type CreateUserParams struct {
	UserID   pgtype.UUID
	Username string
	Email    string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser, arg.UserID, arg.Username, arg.Email)
	var i User
	err := row.Scan(&i.UserID, &i.Username, &i.Email)
	return i, err
}
